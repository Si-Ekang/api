name: Delivery
on:
  push:
    branches: [ master ]
    paths: [ '*.kts', '*gradle*', .github/workflows/*, src/** ]
jobs:
  # ---------- Stage 1 ----------
  get-version:
    name: Get version from configuration
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Get version from configuration
        id: get-version
        run: ./gradlew printVersion &&
          echo ::set-output name=version::$( ./gradlew printVersion -q )
  # ---------- Stage 2 ----------
  deliver:
    name: Deliver image to registries
    runs-on: ubuntu-latest
    needs: get-version
    env:
      GITHUB_IMAGE: si-ekang/api
      GITHUB_REGISTRY: ghcr.io
      HEROKU_IMAGE: ekang-api/web
      HEROKU_REGISTRY: registry.heroku.com
      VERSION: ${{ needs.get-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Update configuration for production
        env:
          CONFIG_FILE: ./src/main/resources/application.conf
        run: echo "ktor.development = false" >> $CONFIG_FILE
      - name: Package application
        run: ./gradlew installDist --no-daemon
      - name: Build images
        run: docker build -t $GITHUB_REGISTRY/$GITHUB_IMAGE . &&
          docker tag "$GITHUB_REGISTRY/$GITHUB_IMAGE" "$GITHUB_REGISTRY/$GITHUB_IMAGE:$VERSION" &&
          docker tag "$GITHUB_REGISTRY/$GITHUB_IMAGE" "$HEROKU_REGISTRY/$HEROKU_IMAGE"
      - name: Login to GitHub registry
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo $TOKEN | docker login $GITHUB_REGISTRY -u _ --password-stdin
      - name: Push images to GitHub registry
        run: docker push -a $GITHUB_REGISTRY/$GITHUB_IMAGE
      - name: Logout from GitHub registry
        run: docker logout $GITHUB_REGISTRY
      - name: Login to Heroku Registry
        env:
          API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: echo $API_KEY | docker login $HEROKU_REGISTRY -u _ --password-stdin
      - name: Push image to Heroku registry
        run: docker push $HEROKU_REGISTRY/$HEROKU_IMAGE
      - name: Logout from Heroku registry
        run: docker logout $HEROKU_REGISTRY
